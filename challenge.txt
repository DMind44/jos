sfork challenge
Goal: Implement sfork() and ensure that forktree.c passes when using sfork. sfork() shares all pages in memory between the child and the parent except the pages in the stack area. To do this, we created a helper function called duppage_share which is called for all pages in the parent below UTOP except the pages in the stack area which are dupplicated with our regular duppage function.

Results from forktree.c:
make run-forktree-nox
...
[00000000] new env 00001000
1000: I am ''
[00001000] new env 00001001
[00001000] new env 00001002
[00001000] exiting gracefully
[00001000] free env 00001000
1001: I am '0'
[00001001] new env 00002000
[00001001] new env 00001003
[00001001] exiting gracefully
[00001001] free env 00001001
2000: I am '00'
[00002000] new env 00002001
[00002000] new env 00001004
[00002000] exiting gracefully
[00002000] free env 00002000
2001: I am '000'
[00002001] exiting gracefully
[00002001] free env 00002001
1002: I am '1'
[00001002] new env 00003001
[00001002] new env 00003000
[00001002] exiting gracefully
[00001002] free env 00001002
3000: I am '11'
[00003000] new env 00002002
[00003000] new env 00001005
[00003000] exiting gracefully
[00003000] free env 00003000
3001: I am '10'
[00003001] new env 00004000
[00003001] new env 00001006
[00003001] exiting gracefully
[00003001] free env 00003001
4000: I am '100'
[00004000] exiting gracefully
[00004000] free env 00004000
2002: I am '110'
[00002002] exiting gracefully
[00002002] free env 00002002
1003: I am '01'
[00001003] new env 00003002
[00001003] new env 00005000
[00001003] exiting gracefully
[00001003] free env 00001003
5000: I am '011'
[00005000] exiting gracefully
[00005000] free env 00005000
3002: I am '010'
[00003002] exiting gracefully
[00003002] free env 00003002
1004: I am '001'
[00001004] exiting gracefully
[00001004] free env 00001004
1005: I am '111'
[00001005] exiting gracefully
[00001005] free env 00001005
1006: I am '101'
[00001006] exiting gracefully
[00001006] free env 00001006
No runnable environments in the system!
Welcome to the JOS kernel monitor!
Type 'help' for a list of commands.
K> 

Results from make grade:
boot block is 408 bytes (max 510)
+ mk obj/kern/kernel.img
make[1]: Leaving directory '/mnt/home/zmwinilayuori/cs134/lab'
faultread: OK (2.5s) 
faultwrite: OK (1.8s) 
faultdie: OK (1.7s) 
faultregs: OK (1.6s) 
faultalloc: OK (1.8s) 
faultallocbad: OK (1.7s) 
faultnostack: OK (1.7s) 
faultbadhandler: OK (1.7s) 
faultevilhandler: OK (1.8s) 
forktree: OK (1.9s)
Score: 50/50
